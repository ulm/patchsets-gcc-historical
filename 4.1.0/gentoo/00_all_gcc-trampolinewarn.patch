	This trivial patch causes gcc to emit a warning whenever
	it generates a trampoline.  These are otherwise hard to
	locate.
	Kevin F. Quinn <kevquinn@gentoo.org> 21 Dec 2005

--- gcc/gcc/c.opt
+++ gcc/gcc/c.opt
@@ -406,6 +406,10 @@
 C ObjC Var(warn_traditional)
 Warn about features not present in traditional C
 
+Wtrampolines
+C ObjC C++ ObjC++
+Warn whenever the compiler generates a trampoline
+
 Wtrigraphs
 C ObjC C++ ObjC++
 Warn if trigraphs are encountered that might affect the meaning of the program
--- gcc/gcc/c-opts.c
+++ gcc/gcc/c-opts.c
@@ -476,6 +476,10 @@
       cpp_opts->warn_traditional = value;
       break;
 
+    case OPT_Wtrampolines:
+      warn_trampolines = value;
+      break;
+
     case OPT_Wtrigraphs:
       cpp_opts->warn_trigraphs = value;
       break;
--- gcc/gcc/flags.h
+++ gcc/gcc/flags.h
@@ -118,6 +118,10 @@
 
 extern int warn_strict_aliasing;
 
+/* Warn whenever a trampoline is generated. */
+
+extern bool warn_trampolines;
+
 /* Temporarily suppress certain warnings.
    This is set while reading code from a system header file.  */
 
--- gcc/gcc/varasm.c
+++ gcc/gcc/varasm.c
@@ -5428,6 +5428,9 @@
 
 int trampolines_created;
 
+/* Warn when a trampoline is generated. */
+bool warn_trampolines = 1;
+
 void
 file_end_indicate_exec_stack (void)
 {
--- gcc/gcc/builtins.c
+++ gcc/gcc/builtins.c
@@ -5014,6 +5014,9 @@
 #endif
   trampolines_created = 1;
   INITIALIZE_TRAMPOLINE (r_tramp, r_func, r_chain);
+
+  if (warn_trampolines)
+    warning ("generating trampoline in object (requires executable stack)");
 
   return const0_rtx;
 }
