http://gcc.gnu.org/PR34571

2009-01-11  Uros Bizjak  <ubizjak@gmail.com>

	Backport from mainline:
	2008-12-22  Uros Bizjak  <ubizjak@gmail.com>

	PR target/34571
	* config/alpha/predicates.md (symbolic_operand): Return 1 for a
	label_ref with an offset.

	2008-03-31  James E. Wilson  <wilson@tuliptree.org>

	* varasm.c (output_constant_pool_1): In LABEL_REF check,
	use tmp consistently.

--- branches/gcc-4_3-branch/gcc/varasm.c	2009/01/11 13:42:32	143271
+++ branches/gcc-4_3-branch/gcc/varasm.c	2009/01/11 14:33:28	143272
@@ -3710,7 +3710,7 @@
       /* FALLTHRU  */
 
     case LABEL_REF:
-      tmp = XEXP (x, 0);
+      tmp = XEXP (tmp, 0);
       gcc_assert (!INSN_DELETED_P (tmp));
       gcc_assert (!NOTE_P (tmp)
 		  || NOTE_KIND (tmp) != NOTE_INSN_DELETED);
--- branches/gcc-4_3-branch/gcc/config/alpha/predicates.md	2009/01/11 13:42:32	143271
+++ branches/gcc-4_3-branch/gcc/config/alpha/predicates.md	2009/01/11 14:33:28	143272
@@ -390,7 +390,8 @@
   (ior (match_code "symbol_ref,label_ref")
        (and (match_code "const")
 	    (match_test "GET_CODE (XEXP (op,0)) == PLUS
-			 && GET_CODE (XEXP (XEXP (op,0), 0)) == SYMBOL_REF
+			 && (GET_CODE (XEXP (XEXP (op,0), 0)) == SYMBOL_REF
+			     || GET_CODE (XEXP (XEXP (op,0), 0)) == LABEL_REF)
 			 && GET_CODE (XEXP (XEXP (op,0), 1)) == CONST_INT"))))
 
 ;; Return true if OP is valid for 16-bit DTP relative relocations.
